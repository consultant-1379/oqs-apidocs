{
  "paths": {
    "/pods": {
      "get": {
        "tags": [
          "pods"
        ],
        "summary": "Returns a list of all Pods.",
        "description": "Returns a list of all Pods.",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Pod"
              }
            }
          },
          "422": {
            "description": "Error while attempting to retrieve Pods."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      },
      "post": {
        "tags": [
          "pods"
        ],
        "summary": "Create a new Pod.",
        "description": "Creates and returns a new Pod.",
        "produces": [
          "application/json"
        ],
        "parameters": [{
          "in": "body",
          "name": "body",
          "description": "Pod object that represents your Pod.",
          "required": true,
          "schema": {
            "$ref": "#/definitions/Pod"
          }
        }],
        "responses": {
          "201": {
            "description": "Created Pod successfully."
          },
          "400": {
            "description": "Possible messages:\n* There was a syntax error found in your request, please make sure that it is valid and try again\n* {PATH} is not in schema and strict mode is set to throw\n* {PATH} is not valid, {VALUE} is not an integer\n* {PATH} is less than minimum allowed value (0)\n* {PATH} is required.\n* Path 'name' {PATH} is shorter than the minimum allowed length (5).\n* Path 'name' {PATH} is longer than the maximum allowed length (20)."
          },
          "422": {
            "description": "Name already exists."
          },
          "500": {
            "description": "Internal Server Error."
          }
        }
      }
    },
    "/pods/search": {
      "get": {
        "tags": [
          "pods"
        ],
        "summary": "Returns a list of Pods that match the provided query parameters.",
        "description": "Returns a list of every Pod that matches the parameter(s) provided in the {query} tag.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
          "name":"name",
          "in":"query",
          "description":"The name of the Pod that needs to be fetched",
          "required":false,
          "allowReserved": true,
          "type":"string",
          "example": "cloud1a"
        },
        {
          "name": "queueEnabled",
          "in": "query",
          "description":"The current queue-enabled status of the Pod(s) that needs to be filtered",
          "required": false,
          "allowReserved": true,
          "type": "boolean",
          "example": "true"
        },
        {
          "name":"products.name",
          "in":"query",
          "description":"The name for the Pod(s) product that needs to be fetched",
          "required":false,
          "allowReserved": true,
          "type":"query",
          "example": "vENM"
        },
        {
          "name":"products.loadValue",
          "in":"query",
          "description":"The load value for the Pod(s) product that needs to be fetched",
          "required":false,
          "allowReserved": true,
          "type":"integer",
          "example": "50"
        },
        {
          "name":"products.timeoutValue",
          "in":"query",
          "description":"The timeout value for the Pod(s) product that needs to be fetched",
          "required":false,
          "allowReserved": true,
          "type":"integer",
          "example": "60"
        },
        {
          "name":"podLoadTolerance",
          "in":"query",
          "description":"The maximum load tolerance for the Pod(s) that needs to be fetched",
          "required":false,
          "allowReserved": true,
          "type":"integer",
          "example": "50"
        },
        {
          "name":"timeoutDuration",
          "in":"query",
          "description":"The maximum time (in minutes) allowed for Deployments to stay active within the parent Pod(s) that needs to be fetched",
          "required":false,
          "allowReserved": true,
          "type":"integer",
          "example": "60"
        }
      ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Pod"
              }
            }
          },
          "422": {
            "description": "Improperly structured query. Make sure to use \"key=value\" syntax."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/pods/{Id}": {
      "get": {
        "tags": [
          "pods"
        ],
        "summary": "Returns a Pod.",
        "description": "Returns a Pod with the specified ID value (if it exists).",
        "produces": [
          "application/json"
        ],
        "parameters": [{
          "name": "Id",
          "in": "path",
          "required": true,
          "description": "The ID of the Pod to retrieve.",
          "type": "string"
        }],
        "responses": {
          "200": {
            "description": "Pod successfully retrieved.",
            "schema": {
              "$ref": "#/definitions/Pod"
            }
          },
          "404": {
            "description": "A Pod with that ID does not exist."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      },
      "delete": {
        "tags": [
          "pods"
        ],
        "summary": "Delete a Pod.",
        "description": "Delete a Pod.",
        "produces": [
          "application/json"
        ],
        "parameters": [{
          "name": "Id",
          "in": "path",
          "required": true,
          "description": "The ID of the Pod to delete.",
          "type": "string"
        }],
        "responses": {
          "204": {
            "description": "Successfully deleted Pod."
          },
          "404": {
            "description": "A Pod with that ID does not exist."
          },
          "422": {
            "description": "Pod has dependant Deployments so cannot be deleted."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      },
      "put": {
        "tags": [
          "pods"
        ],
        "summary": "Update a Pod.",
        "description": "Update a Pod and perform queue-handling on it.",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "parameters": [{
            "name": "Id",
            "in": "path",
            "required": true,
            "description": "The ID of the Pod to update.",
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Pod object you want to update. Partial update possible, not all fields in body required.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Pod"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully updated Pod. \nPossible 'Queue-Handling for Pod {POD_NAME}' messages: \n* Queuing must be enabled for Pod Cloud_3a before handling.\n* Deployments successfully to set to Active: {DEPLOYMENT_NAME}\n* Deployments failed to set to Active (Not Found / Error): {DEPLOYMENT_NAME}\n* Deployments still queued: {DEPLOYMENT_NAME}",
            "schema": {
              "$ref": "#/definitions/Pod"
            }
          },
          "400": {
            "description": "Possible messages:\n* There was a syntax error found in your request, please make sure that it is valid and try again\n* {PATH} is not in schema and strict mode is set to throw\n* {PATH} is not valid, {VALUE} is not an integer\n* {PATH} is less than minimum allowed value (0)\n* {PATH} is required"
          },
          "404": {
            "description": "A Pod with that ID does not exist."
          },
          "406": {
            "description": "Deployment 'name' field is immutable and cannot be modified."
          },
          "422": {
            "description": "Name already exists."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    }
  }
}
